{"version":3,"sources":["components/Formulario.js","components/Cancion.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","guardarBusquedaLetra","useState","artista","cancion","busqueda","guardarBusqueda","error","guardarError","actualizarBusqueda","e","target","name","value","className","onSubmit","preventDefault","trim","type","placeholder","onChange","Cancion","letra","Info","info","Object","keys","length","strArtistThumb","strGenre","strBiographyES","src","alt","href","strFacebook","rel","strTwitter","strLastFMChart","App","busquedaletra","guardarLetra","guardarInfo","useEffect","a","url1","url2","Promise","all","axios","informacion","data","lyrics","artists","requestApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74f3f9c2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({ guardarBusquedaLetra }) => {\n\n    const [busqueda, guardarBusqueda] = useState({\n        artista: '',\n        cancion: ''\n    });\n    const [error, guardarError] = useState(false);\n\n    const { artista, cancion } = busqueda;\n\n    // func para leer contenido \n    const actualizarBusqueda = (e) => {\n        guardarBusqueda({\n            ...busqueda,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // consultar las API's\n    const buscarInfo = (e) => {\n        e.preventDefault();\n        // valicacion\n        if (artista.trim() === '' || cancion.trim() === '') {\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n\n        // Regresar el objecto al componente APP\n        guardarBusquedaLetra(busqueda);\n\n    }\n\n    return (\n        <div className=\"bg-info\">\n            { error && <p className=\"alert alert-danger text-center p-2\">Todos los campos son obligatorios</p>}\n            <div className=\"container\">\n                <div className=\"row\">\n                    <form\n                        className=\"col card text-white bg-transparent mb-5 pt-5 pb-2\"\n                        onSubmit={ buscarInfo }\n                    >\n                        <fieldset>\n                            <legend className=\"text-center\">Buscador letras canciones</legend>\n                        </fieldset>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Artista</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"artista\"\n                                        placeholder=\"Nombre del artista\"\n                                        onChange={actualizarBusqueda}\n                                        value={artista}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Canción</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"cancion\"\n                                        placeholder=\"Nombre Canción\"\n                                        onChange={actualizarBusqueda}\n                                        value={cancion}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary float-rigth\"\n                        >Buscar\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nFormulario.propTypes = {\n\n}\n\nexport default Formulario\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cancion = ({ letra }) => {\n    \n    if (letra.trim() === '') return null;\n    return (\n        <Fragment>\n            <h2>Letra de canción</h2>\n            <p>\n                {letra}\n            </p>\n        </Fragment>\n    )\n}\n\nCancion.propTypes = {\n    letra : PropTypes.string.isRequired\n}\n\nexport default Cancion;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Info = ({ info }) => {\n\n    if (Object.keys(info).length === 0) return null;\n\n    const { strArtistThumb, strGenre, strBiographyES} = info;\n    return (\n        <div className=\"card border-light\">\n            <div className=\"card-header bg-primary text-light font-waight-bold\">\n                Información Artista\n            </div>\n            <div className=\"card-body\">\n                <img src={strArtistThumb} alt=\"Logo artista\" />\n                <p className=\"card-text\"> Género: {strGenre}</p>\n                <p className=\"card-text\"> <b>Biografía</b></p>\n                <p className=\"card-text\"> {strBiographyES}</p>\n                <p className=\"card-text\">\n                    <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-facebook\"></i>\n                    </a>\n                    <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-twitter\"></i>\n                    </a>\n                    <a href={`${info.strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-lastfm\"></i>\n                    </a>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nInfo.propTypes = {\n    info : PropTypes.object.isRequired\n}\n\nexport default Info\n","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Formulario from './components/Formulario';\nimport Cancion from './components/Cancion';\nimport Info from './components/Info';\n\nfunction App() {\n\n\tconst [busquedaletra, guardarBusquedaLetra] = useState({});\n\tconst [letra, guardarLetra] = useState('');\n\tconst [info, guardarInfo] = useState({});\n\n\tuseEffect(() => {\n\t\tif (Object.keys(busquedaletra).length === 0) return;\n\n\t\t// console.log(`El artista es : ${busquedaletra.artista} y la canción es: ${busquedaletra.cancion}`);\n\n\t\tconst requestApi = async () => {\n\t\t\tconst { artista, cancion } = busquedaletra;\n\t\t\tconst url1 = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\n\t\t\tconst url2 = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artista}`;\n\t\t\t\n\t\t\tconst [letra, informacion] = await Promise.all([\n\t\t\t\taxios(url1),\n\t\t\t\taxios(url2)\n\t\t\t]);\n\n\t\t\t// guardarLetra(letra.data.lyrics);\n\t\t\tguardarLetra(letra.data.lyrics);\n\t\t\tguardarInfo(informacion.data.artists[0]);\n\t\t\t// Resetar info \n\t\t\tguardarBusquedaLetra({});\n\n\t\t}\n\t\trequestApi();\n\t}, [busquedaletra, info]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Formulario\n\t\t\t\tguardarBusquedaLetra={ guardarBusquedaLetra }\n\t\t\t/>\n\n\t\t\t<div className=\"container mt-5\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t<Info info={ info }/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t<Cancion letra={ letra }/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}